\documentclass[12pt]{article}
\usepackage{amsmath,latexsym,amsfonts,amsthm,graphicx,subcaption}
\usepackage[margin=1in]{geometry} \usepackage{tikz,caption}
\usetikzlibrary{backgrounds} \usepackage{fancyhdr}
\usepackage{multicol} \usepackage{caption} \usepackage{empheq}
%\setlist{parsep=0pt,listparindent=\parindent}
\usepackage{listings} 

\definecolor{light-gray}{gray}{0.95}

\lstset{%numbers=right, 
                %numberstyle=\tiny, 
                breaklines=true,
                backgroundcolor=\color{light-gray},
                %numbersep=5pt,
                xleftmargin=.25in,
                xrightmargin=0in} 



\newcommand{\ep}{\epsilon} \newcommand{\noi}{\noindent}
\newcommand{\sol}{\subsubsection*{Solution}}
\newcommand{\R}{\mathbb{R}} \newcommand{\inti}{\int_{-\infty}^\infty}
\newcommand{\wto}{\rightharpoonup} \newcommand{\bd}{\partial \Omega}
\newcommand{\pb}[1]{\subsection*{Problem #1}}
\newcommand{\ang}[2]{\langle #1 , #2 \rangle} \newcommand{\<}{\langle}
\newcommand{\sa}{\sigma\text{-algebra}}
\newcommand{\pr}{\partial}
\newcommand{\secDif}[1]{ \left( \frac{ {#1}_{i+1}^{n+1} - 2 {#1}_{i}^{n+1} +
{#1}_{i-1}^{n+1} }{\Delta \eta^2} \right) }
\newcommand{\secDifEnd}[1]{\left( \frac{2 {#1}_{I-1}^{n+1} - 2 {#1}_I^{n+1}
}{\Delta \eta^2 } \right)}
\newcommand{\Dif}[1]{ \left( \frac{ {#1}_{i+1}^{n+1} - {#1}_{i-1}^{n+1}}{ 2\Delta
\eta} \right)}
\newcommand{\tDif}[1]{ \frac{ {#1}_i^{n+1} - {#1}_i^{n}}{\Delta t}}
\newcommand{\tDifEnd}[1]{ \left( \frac{ {#1}_{I}^{n+1} - {#1}_I^{n}}{\Delta t }
\right)}



\begin{document} 

%------------------------------------------------------
% Document
%------------------------------------------------------
\thispagestyle{empty} 
\title{ {\Large CSE380: Tools and Techniques of Computational Science }\\ {\large Final
Project Proposal}}
\author{Gopal Yalla}
\date{November 28, 2016}
\maketitle
\newpage 

\thispagestyle{empty} 
\tableofcontents
\newpage 

\setcounter{page}{1}


\chead{CSE380: Final Project Proposal} 
\lhead{Gopal Yalla} 
\rhead{11/11/2016}

\section{Problem Formulation}

It is well known that the Navier-Stokes equations,

\begin{equation}
	\begin{split}
		\pr_t u_i + u_j \pr_j u_i &= \frac{1}{\rho} \pr_i P + \nu \Delta
		u_i \\
		\pr_i u_i &= 0 
	\end{split}
	\label{eq:NS}
	\; ,
\end{equation}

\noi govern viscous incompressible flow; however, at high Reynolds number, it
is computationally infeasible to use (\ref{eq:NS}) to simulate fluid flow.  
Therefore, one must develop turbulent models to provide tools for computing 
complex turbulent flows. Often times, a statistical approach is taken where the
goal is to describe the statistics of the velocity field, without access to
realizations of the random flow \cite{DURBIN_BOOK}. For example, the
total velocity can be decomposed into a sum of its mean and fluctuations
$u(\mathbf{x},t) = U(\mathbf{x},t) + \tilde{u}(\mathbf{x},t)$, where $U \equiv
\overline{u}$. Substituting this decomposition into (\ref{eq:NS}) gives, 

\begin{equation*}
	\begin{split}
		\pr_t(U_i + \tilde{u}_i) + (U_j + \tilde{u}_j) \pr_j (U_i +
		\tilde{u_i}) &= \frac{-1}{\rho} \pr_i(P+p) + \nu \Delta (U_i
		+\tilde{u}_i )\\
		\pr_i(U_i + \tilde{u}_i) &=0 
	\end{split}
	\; . 
\end{equation*}

\noi The average of these equations is obtained by noting $\overline{U} = U$ and
$\overline{\tilde{u}} = 0$: 

\begin{equation}
	\begin{split}
		\pr_t U_i + U_j \pr_j U_i &= \frac{-1}{\rho} \pr_i P + \nu
		\Delta U_i - \pr_j \overline{\tilde{u}_j \tilde{u}_i} \\
		\pr_i U_i &=0 
	\end{split}
	\label{eq:RANS}
	\; ;
\end{equation}

\noi These are the Reynolds Averaged Navier-Stokes (RANS) equations, 
which are unclosed primarly due to the terms in
the Reynolds stress tensor, $\pr_j \overline{\tilde{u}_j \tilde{u}_i}$. Thus, to
close these equations, a (semi-empirical) model for the Reynolds stress tensor
is required. 

\subsection{$\overline{v^2}-f$ Model}

Closing the RANS equations is accomplished by various turbulence models.
Here, we will focus on the $\overline{v^2}-f$ model, first proposed by Durbin
in 1995 \cite{v2f}. The $\overline{v^2}-f$ model is the primary RANS model used by the PECOS
group in their hybrid RANS/LES models \cite{thesis}. The $\overline{v^2}-f$
equations are: 
\begin{align}
	\pr_t U_i + U_j d_j U_i &= \frac{-1}{\rho} \pr_i \left( P +
	\frac{2}{3} \rho k \right) + \pr_j \left[ (\nu + \nu_T)(\pr_j U_i + \pr_i
	U_j)]\right] \\
	\pr_t k + U_j d_j k &= \mathcal{P}- \ep + \pr_j \left( (\nu +\nu_T)d_j
	k\right)\\
	\pr_t \ep + U_j d_j \ep &= \frac{C_{\ep 1}\mathcal{P} - C_{\ep 2}
	\ep}{T} + \pr_j \left( (\nu + \frac{\nu_T}{\sigma_\ep}) \pr_j \ep \right)\\
	\pr_t \overline{v^2} + U_j d_j \overline{v^2} + \ep
	\frac{\overline{v^2}}{k} &= kf + \pr_k [ \nu_T \pr_k \overline{v^2}] + v
	\nabla^2 \overline{v^2} \\
	L^2 \nabla^2 f - f &= -C_2 \frac{\mathcal{P}}{k} + \frac{C_1}{T} \left(
	\frac{\overline{v^2}}{k} - \frac{2}{3} \right) 
	\label{eq:v2f}
\end{align}

\noi Below we summarize the various unknowns, constants, and other terms. 

\noi \textbf{Unknowns:}
\begin{itemize}
	\item $U_i$ --- $i^{th}$ component of the mean velocity. 
	\item $\nu_T = C_\mu \overline{v^2} T$ \newline
		 --- eddy viscosity. 
	\item $k$ --- turbulent kinetic energy. 
	\item $\ep$ --- energy dissipation.
	\item $\overline{v^2}$ --- Velocity scale to capture anisotropy near wall
	\item $f$ --- ``redistribution term.''
\end{itemize}

\noi \textbf{Other Terms:} 
\begin{itemize}
	\item $\mathcal{P} = \nu_T( \pr_i U_j + \pr_j U_i)\pr_i U_j$ \newline
		--- rate at which mean flow is converted to turbulent.
	\item $T = \max \left\{ \frac{k}{\ep} , 6 \left( \frac{v}{\ep}
		\right)^{\frac{1}{2}} \right\}$ \newline
		--- turbulent length scale. 
	\item $L = \max C_L\left\{ \frac{k^{3/2}}{\ep}, C_\eta ( \frac{v^3}{\ep} )^{1/4} \right\}$ \newline
		--- Length Scale.
	\item $\nu$ --- viscosity. 
	\item $\rho$ --- fluid density. 
\end{itemize}

\noi \textbf{Constants:}
\begin{multicols}{2}
\begin{enumerate}
	\item $C_\mu = 0.19$
	\item $\sigma_\ep = 1.3$
	\item $C_2 = 0.3$	
	\item $C_L = 0.3$
\end{enumerate}
\columnbreak 

\begin{itemize}
	\item[5.] $C_1 = 0.4$
	\item[6.] $C_{\ep 1} = 1.5$5%1.4[1 + 0.045 (k/v^2)^{1/2}]$
	\item[7.] $C_{\ep 2} = 1.9$  
	\item[8.] $C_\eta = 70$
\end{itemize}
\end{multicols}

\subsection{Fully Developed Channel Flow}

For this project, we only consider fully developed channgel flow, through a rectangular duct of
height $h=2 \delta$. The bottom and top walls are at $y = 0$ and $y =
2 \delta$ with the mid plane being $y = \delta$. In the fully developed region,
the flow is entirely in the axial direction, i.e,  staistics no longer vary with
$x$ \cite{pope}. Hence, the
fully developed channel flow being considered is statistically stationary and
statistically one-dimensional, with velocity statistics depending only on $y$
\cite{pope}. Moreover, the flow is statistically symmetric about the mid-plane $y = \delta$.
The steady state $\overline{v^2}-f$ equations for fully developed flow are given
by, 

\begin{align}
	\label{eq:ssv2f1}
	(\nu + \nu_T) \frac{\pr^2 U}{\pr y^2} + \frac{\pr U}{\pr y}
	\frac{\pr \nu_T}{\pr y} - \frac{1}{\rho} \frac{\pr P }{\pr x} &= 0 \\
	\mathcal{P} - \ep + (\nu+ \nu_T) \frac{\pr^2 k }{\pr y^2} +
	\frac{\pr k}{\pr y} \frac{\pr \nu_T}{\pr y} &=0\\
	\frac{C_{\ep 1 } \mathcal{P} - C_{\ep 2 } \ep}{T} + \left(\nu +
	\frac{\nu_T}{ \sigma_\ep}
	\right) \frac{\pr^2 \ep}{\pr y^2 } + \frac{1}{\sigma_\ep}
	\frac{\pr \ep}{\pr y} \frac{\pr \nu_T}{\pr y} &= 0 \\
	kf + (\nu + \nu_T) \frac{\pr^2 \overline{v^2}}{\pr y^2} +
	\frac{\pr \overline{v^2}}{\pr y} \frac{\pr \nu_T}{\pr y} -
	\frac{\ep \overline{v^2}}{k} &= 0 \\
	L^2 \frac{d^2 f }{dy^2} - f + c_2 \frac{\mathcal{P}}{k} -
	\frac{c_1}{T} \left( \frac{\overline{v^2}}{k} - \frac{2}{3}\right) &=0
	\label{eq:ssv2f5}
\end{align}

\noi with boundary conditions at $y = 0$ being, 

\[ U =  k =  \overline{v^2}= 0, \; \ep \to 2 \nu \frac{k}{y^2}, \; f \to -
\frac{20 \nu^2 \overline{v^2}}{\ep(0)y^4}\; .\] 

\noi and boundary conditions at $y = \delta$ being, 

\[ \frac{\pr U}{\pr y} = \frac{\pr k}{\pr y} = \frac{\pr
	\overline{v^2}}{\pr y} = \frac{\pr \ep}{\pr y} = \frac{\pr f}{\pr y} = 0
\; . \]

There is a ``code-friendly'' version of equation (\ref{eq:ssv2f5}) mentioned in
\cite{lien1996non} to alliviate the instability that may arise in the boundary
condition for $f(0)$ (due to the  $y^4$ term), but it is also mentioned that
when coupled implicit solvers are used, the code-friendly version may be
unnecessary, so we will only incorporate this if need be. 

\subsection{Non-Dimensionalization} 

Before solving equations (\ref{eq:ssv2f1})-(\ref{eq:ssv2f5}), we must
non-dimensionalize the equations. Below we list each dimensional variable and
cooresponding unit. In table \ref{tb:nd1}, $L$ and $T$ represent the fundamental physical
dimensions of length and time (not to be confused with the $L$ and $T$ above.) 

\begin{center}
\begin{tabular}{|c||c|c|c|c|c|c|c|}
\hline
Variable & $U$ & $\ep$ & $k$ & $\nu_T$ & $\mathcal{P}$ & $f$ & $\overline{v^2}$ \\ 
\hline
Units & $\frac{L}{T}$ & $\frac{L^2}{T^3}$ & $\frac{L^2}{T^2}$ & $\frac{L^2}{T}$ &
$\frac{L^2}{T^3}$ & $\frac{1}{T}$ & $\frac{L^2}{T^2}$\\ 
\hline
\end{tabular}
	\captionof{table}{Dimensional Variables and Physical Units}
	\label{tb:nd1}
\end{center}

We will normalize length by the layer thickness, $\delta$, and normalize velocity by
the velocity scale, 

\[ u_\tau = \sqrt{ \frac{\tau_w}{\rho} } = \sqrt{\frac{\mu \frac{\pr U}{\pr
y}}{\rho}} = \sqrt{\nu \frac{\pr U }{\pr y}} \; , \]

\noi where $\tau_w$ is the stress at the wall. Note that this normalization we
chosen so that 
\[ \frac{1}{\rho} \frac{\pr P}{\pr x} = -1 \; . \]

\noi Using this normalization we can define our non-demensional variables based 
on table \ref{tb:nd1}, e.g., $U^+ = U/u_\tau, \ep^+ = \ep\delta/u_\tau^3$, etc. Moreover, we define the parameter
$Re_\tau = u_\tau \delta / \nu$ so that $\nu^+ = 1/Re_\tau$.  From here on we will abuse
notation and only use the ($^+$) notation on $U$, e.g., $U^+ = U/u_\tau$ but $\ep
= \ep \delta/u_\tau^3$.  Lastely, we  define the variable $\eta = y/\delta$ so that
$\eta \in (0,1)$. This leads to the non-dimensionsal $\overline{v^2}-f$
equations for fully developed flow: 

\begin{align}
	\label{eq:ndv2f1}
	\left( \frac{1}{Re_\tau} + \nu_T\right) \frac{\pr^2 U^+}{\pr \eta^2} +
	\frac{\pr U^+}{\pr \eta}
	\frac{\pr \nu_T}{\pr \eta} +1 &=0\\ 
	\mathcal{P} - \ep + \left( \frac{1}{Re_\tau}+ \nu_T \right) \frac{\pr^2
	k }{\pr \eta^2} + \frac{\pr k}{\pr \eta} \frac{\pr \nu_T}{\pr \eta} &=0\\
	\frac{C_{\ep 1 } \mathcal{P} - C_{\ep 2 } \ep}{T} + \left(
	\frac{1}{Re_\tau} + \frac{\nu_T}{ \sigma_\ep}
	\right) \frac{\pr^2 \ep}{\pr \eta^2 } + \frac{1}{\sigma_\ep}
	\frac{\pr \ep}{\pr \eta} \frac{\pr \nu_T}{\pr \eta} &= 0 \\
	kf + \left(\frac{1}{Re_\tau} + \nu_T\right) \frac{\pr^2
		\overline{v^2}}{\pr \eta^2} +
	\frac{\pr \overline{v^2}}{\pr \eta} \frac{\pr \nu_T}{\pr \eta} -
	\frac{\ep \overline{v^2}}{k} &= 0 \\
	L^2 \frac{d^2 f }{d\eta^2} - f + c_2 \frac{\mathcal{P}}{k} -
	\frac{c_1}{T} \left( \frac{\overline{v^2}}{k} - \frac{2}{3}\right) &=0
	\label{eq:ndv2f2}
\end{align}

\noi where, 

\begin{align*}
	T &= \max \left\{ \frac{k}{\ep}, 6 \sqrt{\frac{1}{Re_\tau \ep}} \right\}
	\\ 
	L &= C_L \max \left\{ \frac{k^{3/2}}{\ep}, C_\eta \left(
	\frac{1}{Re_\tau^3 \ep}
	\right)^{1/4} \right\} \\ 
	\mathcal{P} &= \nu_T \left( \frac{\pr U^+}{\pr \eta} \right)^2 
\end{align*}

\noi with boundary conditions at $\eta = 0$ being, 

\[ U^+ =  k =  \overline{v^2}= 0, \; \ep \to 2 \frac{k}{Re_\tau \eta^2}, \; f \to -
\frac{20\overline{v^2}}{Re_\tau^2 \ep(0) \eta^4}\; .\] 

\noi and boundary conditions at $y = \delta$ being, 

\[ \frac{\pr U}{\pr \eta} = \frac{\pr k}{\pr \eta} = \frac{\pr
	\overline{v^2}}{\pr \eta} = \frac{\pr \ep}{\pr \eta} = \frac{\pr f}{\pr
	\eta} = 0
\; . \]


\section{Numerical Methods} 

%In order to solve equations (\ref{eq:ndv2f1}) - (\ref{eq:ndv2f2}), we will use a
%centered difference scheme in space; however, before going into further detail,
%we must discuss the idea of time marching. 

\subsection{Time-Marching} 

As described in the previous section, we want to solve the steady state
$\overline{v^2}-f$ equations for fully developed channel flow. We could try and
do this by discretizing the steady equations and writing a nonlinear solver, but
the equations are sensitive enough that the most naive solvers (e.g., Newton's
method) will diverge unless one starts with a very accurate initial guess. One
way around this problem is to use some sort of continuation method, often done
by time marching. Essentially, we are looking to march in time from our initial
guess to the steady state equations. Backward Euler is a good choice of time
scheme because it is implicit (so one can take large steps) and because accuracy
in time is not of importance. In fact, because we do not care about temporal
accuracy, there is no need to fully solve the nonlinear system at each
step,i.e., we can just take a single Newton iteration and go to the next step.
\cite{todd}

To be more specific, if $R(U)=0$ is the system to solve, we start with an
initial guess $U = U_0$ and solve $\pr U / \pr t + R(U) = 0$ forward in time
until $\pr U/\pr t = 0$. Generally, this works best if you start with a small
time step and then gradually increase the time step until it is very large at
which point you're essentially trying to solve the steady problem from a
different initial guess. \cite{todd}. 

\subsection{Finite Difference Scheme}

In order to solve equations (\ref{eq:ndv2f1}) - (\ref{eq:ndv2f2}), we will use a
(second-order) centered difference scheme in space and backward Euler in time
for time marching. Let $\Delta \eta$ and $\Delta t$ be the space and time step
size, respectively. Moreover, for each variable $\xi$, define $\xi_i^n = \xi(x_i,t_n)$ where $x_i = i
\cdot\Delta \eta$, and $t_n = n\cdot\Delta t$, and define $I = 1/\Delta \eta$.
Let $\xi^{n+1}$ be the vector of uknowns at $t = (n+1) \cdot \Delta t$, i.e., 

\[ \xi^{n+1} = \left[ \begin{matrix} \ep^{n+1}_0 \\ f^{n+1}_0 \\
		{U^+}_1^{n+1} \\ k_1^{n+1} \\ \ep_1^{n+1} \\
	{\overline{v^2}}_1^{n+1} \\ f_{1}^{n+1} \\ {U^+}_2^{n+1} \\
	k_2^{n+1} \\ \vdots \\ f_{I-1}^{n+1} \\ {U^+}_I^{n+1} \\ k_I^{n+1} \\ \ep_I^{n+1} \\
{\overline{v^2}}_I^{n+1} \\ f_I^{n+1} \end{matrix} \right] \]  

\noi Then, from equations
(\ref{eq:ndv2f1})- (\ref{eq:ndv2f2}) plus time marching, we wish to solve
$F(\xi^{n+1})=0$ for each time step, where  

\begin{equation*}
	\hspace{-1in}
	F(\xi^{n+1}) = \left(
	\begin{matrix} 
		\ep_0^{n+1} - \frac{2k_1^{n+1}}{Re_\tau \Delta \eta^2} \\ 
		f_0^{n+1} - \frac{20 \overline{v^2}}{Re_\tau^3 \ep_0^{n+1} \Delta \eta^4}\\
		\vdots \\
		\tDif{U^+} + \left(
		\frac{1}{Re_\tau} + {\nu_T}_i^{n+1} \right) \secDif{ {U^+}} +
		\Dif{ U^+} \Dif{\nu_T} + 1 \\ 
		\tDif{k} + \mathcal{P}_i^{n+1} - \ep_i^{n+1} + \left( \frac{1}{Re_\tau} +
		{\nu_T}_{i}^{n+1} \right) \secDif{k} + \Dif{k} \Dif{\nu_T} \\
		\tDif{\ep} +\frac{C_{\ep 1} \mathcal{P}_i^{n+1} -  C_{\ep 2}
		\ep_{i}^{n+1}}{T_i^{n+1}} + \left( \frac{1}{Re_\tau} +
		\frac{ {\nu_T}_{i}^{n+1}}{\sigma_\ep} \right) \secDif{\ep} +
		\frac{1}{\sigma_\ep} \Dif{\ep} \Dif{\nu_T} \\ 
		\tDif{\overline{v^2}} + k_i^{n+1} f_i^{n+1} + \left( \frac{1}{Re_\tau} +
		{\nu_T}_i^{n+1}  \right) \secDif{\overline{v^2}} +
		\Dif{\overline{v^2}} \Dif{\nu_T} - \ep_i^{n+1}
		\frac{ {\overline{v^2}_i^{n+1}}}{k_i^{n+1}} \\
		\tDif{f} + (L_i^{n+1})^2 \secDif{f} - f_i^{n+1} + C_2
		\frac{\mathcal{P}_i^{n+1}}{k_i^{n+1}} -
		\frac{C_1}{T_i^{n+1}} \left( \frac{
			{\overline{v^2}}_i^{n+1}}{k_i^{n+1}} -
			\frac{2}{3} \right) \\
		\vdots \\
		\tDifEnd{U^+} + \left( \frac{1}{Re_\tau} + {\nu_T}_I^{n+1}
		\right) \secDifEnd{U^+} + 1 \\ 
		\tDifEnd{k} + \mathcal{P}_I^{n+1} - \ep_{I}^{n+1} + \left(
		\frac{1}{Re_\tau} + {\nu_T}_I^{n+1}\right) \secDifEnd{k} \\
		\tDifEnd{\ep} + \frac{C_{\ep 1} \mathcal{P}_I^{n+1}-C_{\ep 2}
		\ep_I^{n+1}}{T_I^{n+1}} + \left( \frac{1}{Re_\tau} +
		\frac{ {\nu_T}_I^{n+1}}{\sigma \ep} \right) \secDifEnd{\ep} \\
		\tDifEnd{\overline{v^2}} + k_I^{n+1} f_{I}^{n+1} + \left(
		\frac{1}{Re_\tau} + {\nu_T}_I^{n+1} \right)
		\secDifEnd{\overline{v^2}} \\
		\tDifEnd{f} + \left( L_i^{n+1} \right)^2 \secDifEnd{f} -
		f_I^{n+1} + C_2 \frac{\mathcal{P}_I^{n+1}}{k_I^{n+1}} -
		\frac{C_1}{T_{I}^{n+1}} \left(
		\frac{\overline{v^2}_I^{n+1}}{k_I^{n+1}} - \frac{2}{3} \right)
	\end{matrix}
	\right)
\end{equation*}

\noi The initial conditions will be interpolated from the direct numerical
simulation data performed by Dr. Moser and Dr. Lee on
turbulence.ices.utexas.edu. 

\subsection{External Software}

We plan to make use of GSL's multi-dimensional root solvers (e.g. GSL's newton
solver) and GRVY for input parsing. Regarding input options we will allow a
choice of model paramters and constants, step size, and make use of various log
levels to control standard output.  

%------------------------------------------------------
\section{Verification Plan}
%-----------------------------------------------------

\subsection{Regression Tests}

In order to test the accuracy of the numerical method, we will perform
asympotic error analysis. To do this we compute the solution for a large number
of steps, $N$, and use this as our ``true'' solution. Then we compute the
solution for small $N$ and plot the error vs $N$ on a log-log plot. The slope of
the line should be the order of the numerical method (2 in this case). Moreover, we
can save the computed solutions to make sure we can recover them in the future. 

To test the actual physics opposed to the numerical scheme, we will check the
convergce of certain statistical quantities; however, more research needs to be done
to determine which quanities to check. 

Lastely, if time permits (or possibly over break), we will implement a method of manufactured
solutions ---  a technique by which numerical methods within codes can be verified
to ensure that they have been coded correctly and do, in fact, solve the
equations that they claim to solve.

\subsection{Unit Tests}

Unit testing will play a major role in the project, as there will be several
routines that compute quanities, which we will need to test. The best way to do
this is to test each function with dummy quanities and compare the result to the
true value, which will be computed by hand. 

%-----------------------------------------------------
\section{Other Design Considerations}
%--------------------------------------------------

\subsection{Build Systems}

We will use GNU make to link in all 3rd party libraries that the applicaiton
requires. It will have an option to run a suite of the aforementioned regression
tests via the ``make check'' check target.  

\subsection{Version Control} 

Git will be used for version control. 

\subsection{Profiling and Performance Optimization} 
Once the code is complete and we are confident in the answer, we will worry
about performance optimization. First off, performance timing
measurements for key kernels within the code will be included using the GRVY
library. If the program takes longer to run than desired, we will use gprof for
profiling to see which parts of the code to optimize.    













\newpage 
\addcontentsline{toc}{section}{References}
\bibliography{Problem_Statement}
\bibliographystyle{ieeetr}
\end{document} 
