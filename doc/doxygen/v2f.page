/**
\mainpage V2-F Simulation: Fully Developed Channel Flow

<b>Author</b>: Gopal Yalla

Built by: gry88 on stampede.tacc.utexas.edu

Build Date: 12/9/2016
<hr>

\section Overview


This code simulates fully developed channel flow using the v2-f RANS model proposed by Durbin, and was written as a final project for CSE380. The project makes use of the following design principles: 

<ul>
<li> Documentation.
<li> Version Control. 
<li> Build systems. 
<li> Verification. 
<li> Code Coverage.
<li> Profiling / Optimization. 
</ul>

Each of these categories is detailed below. The code was written in C++ and make use of several GSL functions and structs. For example, the code uses a second order centered difference scheme in space, and backward Euler in time (for time marching), and the resulting system is solved with GSL's multidimensional root solver.

\section doc Documentation

The model documentation can be found <a href="http://users.ices.utexas.edu/~gopal/v2f/Problem_Statement.pdf">here</a>. Several of the variable names in the code follow the naming scheme used in this document. For the code documentation...you're looking at it! This page details each header file and class in the source code, which is included by `main.cpp' 

\section vc Version Control

Git was used for version control. 

\section make Build Systems

There are three Makefiles in the project: 

<ul>
<li> Makefile
<li> src/Makefile
<li> test/unit/Makefile
</ul>

Only the Makefile in the root directory should be called as it interacts with the other Makefiles. Issuing a 'make' command will display all possible targets as shown:

<div class="fragment"><pre class="fragment"> &gt; make
Available make targets:
  source    : build main program in /src/
  check     : build and run test unit test suite in /test/unit
  coverage  : build lcov in include/lcov, build tests with --coverage option, run lcov, and generate html in /test/unit/lcov_html
 </pre></div><p><a class="anchor" id="Installation"></a> </p>

There are also 3 PHONY targets in Makefile: clobber, clean, echo. 

\section test Verification 

\subsection unit Unit Tests

The project comes with a host of unit tests to verify the software is working properly. To run, issue a ''make check'' to initiate the tests. If successful, output similar to the following will be generated:

<div class="fragment"><pre class="fragment"> &gt; make check
-------------------------------------------------------
Running Unit Test Suite
-------------------------------------------------------
PASS: Interpolation Test
PASS: Getting inputs
PASS: Saving Results
PASS: Compute Turbulent Time Scale, T
PASS: Compute Tubulent Length Scale, L
PASS: Compute Eddy Viscosity, vT
PASS: Compute Production Rate, P
PASS: Compute Dissipation at Wall
PASS: Compute redistribution at Wall
PASS: Setting U terms in system
PASS: Setting k terms in system
PASS: Setting ep terms in system
PASS: Setting v2 terms in system
PASS: Setting f terms in system
PASS: Putting system together 
-------------------------------------------------------
 </pre></div><p><a class="anchor" id="Installation"></a> </p>

 \subsection regression Regression Tests

 <i>*In a future version we hope to implement tests for asymptotic error analysis, covergence of certain statistical quantities, and a method of manufactured solutions</i>* 

\section coverage Code Coverage

Issuing a "make check" will generate code coverage results of the unit test suite using lcov. The results of the currect unit can be found <a href="http://users.ices.utexas.edu/~gopal/v2f/lcov_html/">here</a>.

\section opt Profiling / Optimizaiton

\section bugs Reporting Comments and Bugs

Bugs in the code and errors or omissions in the documentation can be reported to gopal@ices.utexas.edu. Requests and contributions are welcome at the same e-mail address.

\cond

\htmlonly<img src="figure/temp.png" width="700px" height="300px" align="middle"/> \endhtmlonly
\endcond

*/
